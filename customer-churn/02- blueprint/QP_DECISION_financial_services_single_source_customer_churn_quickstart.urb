{"blueprints": [{"BLUEPRINT_ID": 148, "BLUEPRINT_NAME": "Financial Services Single Source Customer Churn Quickstart", "BLUEPRINT_DESC": "Financial Services with Feature Store Customer Churn Pipeline", "BLUEPRINT_STATUS": "Active", "ENDPOINT": "customerchurnquickstartsingle", "CREATED_BY": 1, "OP_COUNT_MAX": 15, "LOG_SAMPLING_DEFAULT": "true", "LOG_SAMPLING": "false", "LOG_SAMPLING_PERCENT": 100, "BLUEPRINT_UUID": "e9a12acc-371a-4b81-8150-666c121b267d", "IS_DELETED": null, "IS_RESPONSE_CACHING_ENABLED": false, "RESPONSE_CACHING_EXPIRATION_SECONDS": null, "BLUEPRINT_CATEGORY": "DECISION", "UI_OBJECT": {"BLUEPRINT_UI_ID": 128, "BLUEPRINT_ID": 148, "BLUEPRINT_UI_OBJ": "{\"24aa34c7-9d36-4a44-bbb0-e75ba2f279b4\": {\"id\": \"24aa34c7-9d36-4a44-bbb0-e75ba2f279b4\", \"top\": 138, \"left\": 113, \"type\": \"widget\", \"connections\": [{\"objectId\": \"3ffd59e4-d7f3-4338-b108-4ec3845faaf0\"}]}, \"38c8f93f-214a-4461-a108-9f2a27a0cfc7\": {\"id\": \"38c8f93f-214a-4461-a108-9f2a27a0cfc7\", \"top\": 260, \"left\": 471, \"type\": \"widget\", \"connections\": [{\"objectId\": \"exite9a12acc-371a-4b81-8150-666c121b267d\"}]}, \"3ffd59e4-d7f3-4338-b108-4ec3845faaf0\": {\"id\": \"3ffd59e4-d7f3-4338-b108-4ec3845faaf0\", \"top\": 260, \"left\": 286, \"type\": \"widget\", \"connections\": [{\"objectId\": \"38c8f93f-214a-4461-a108-9f2a27a0cfc7\"}]}, \"6ab0eb73-9a97-4b57-9120-f2c2733f6007\": {\"id\": \"6ab0eb73-9a97-4b57-9120-f2c2733f6007\", \"top\": 264, \"left\": 832, \"type\": \"widget\", \"connections\": []}, \"entrye9a12acc-371a-4b81-8150-666c121b267d\": {\"id\": \"entrye9a12acc-371a-4b81-8150-666c121b267d\", \"top\": 20, \"left\": 112, \"type\": \"blueprintEntry\", \"connections\": [{\"objectId\": \"24aa34c7-9d36-4a44-bbb0-e75ba2f279b4\"}]}, \"exite9a12acc-371a-4b81-8150-666c121b267d\": {\"id\": \"exite9a12acc-371a-4b81-8150-666c121b267d\", \"top\": 260, \"left\": 652, \"type\": \"blueprintExit\", \"connections\": [{\"objectId\": \"6ab0eb73-9a97-4b57-9120-f2c2733f6007\"}]}}"}, "ROUTES": [{"ROUTE_PCT_ID": 3003, "BLUEPRINT_ID": 148, "ROUTE": 1, "ROUTE_NAME": null, "ROUTE_DESC": null, "RUN_PERCENT": 100, "OPERATIONS": [{"OP_SEQ_ID": 34593, "BLUEPRINT_ID": 148, "OPERATION_ID": 878, "SEQUENCE": 1, "ROUTE": 1, "OPERATION_IS_REGULAR": "true", "GADGET_ID": 133, "OPERATION_NAME": "Get Customer Demographics", "OPERATION_DESC": "Get Customer Demographics", "OPERATION_CAT_DC": null, "OPERATION_RETURN_KEY": "relational_database", "OPERATION_ASYNC": "false", "OPERATION_CACHE": "false", "OPERATION_CACHE_TO_TYPE": null, "OPERATION_CACHE_TO_VALUE": "60", "CACHE_DEFAULT": "true", "DISABLE_REQUEST_LOGGING": "False", "DISABLE_RESPONSE_LOGGING": "False", "RUN_ON_BLUEPRINT_FAILURE": null, "RUN_ON_BLUEPRINT_SUCCESS": null, "RUN_ON_BLUEPRINT_CACHED_RESPONSE": false, "OPERATION_UUID": "24aa34c7-9d36-4a44-bbb0-e75ba2f279b4", "GADGET": {"GADGET_ID": 133, "COMM_CLASS_ID": 1, "GADGET_NAME": "Demo DB", "GADGET_DESC": "Connects to Demo Database", "GADGET_STATUS": "ACTIVE", "GADGET_CATEGORY_ID": 2, "GADGET_ICON_ID": null, "IS_PLACEHOLDER": null, "GADGET_UUID": "fd011d64-4113-4ec4-a6b6-fb12fdee2cc7", "GADGET_CATEGORY": "Data Acquisition: Relational DB", "COMM_CLASS": "RDBComm"}, "COMM_CLASS_NAME": "RDBComm", "OPERATION_PARAMS": [{"OPERATION_PARAM_ID": 1956, "OPERATION_ID": 878, "PARAM_NM": "template", "PARAM_TYPE": "json", "PARAM_VALUE": "{\"commands\":[\"query\"],\"query_to_execute\":\"select CustomerId,\\nSurname,\\nCreditScore,\\nGeography,\\nGender,\\nAge,\\nTenure,\\nEstimatedSalary,\\nExited,\\nsalesforceKey,\\nBalance,\\nNumOfProducts,\\nHasCrCard,\\nIsActiveMember\\nfrom CUSTOMER_CHURN where CustomerId = '$customerId'\"}"}, {"OPERATION_PARAM_ID": 1957, "OPERATION_ID": 878, "PARAM_NM": "LOGIC_IN", "PARAM_TYPE": "string", "PARAM_VALUE": ""}, {"OPERATION_PARAM_ID": 1958, "OPERATION_ID": 878, "PARAM_NM": "LOGIC_OUT", "PARAM_TYPE": "string", "PARAM_VALUE": ""}], "OPERATION_VAR_DEFS": [{"VAR_DEF_ID": 1517, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": "$.relational_database.rows[0].CreditScore", "MATCH_BY": null, "VAR_NAME": "CreditScore", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "integer", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1518, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": "$.relational_database.rows[0].EstimatedSalary", "MATCH_BY": null, "VAR_NAME": "EstimatedSalary", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "float", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1519, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": "$.relational_database.rows[0].Geography", "MATCH_BY": null, "VAR_NAME": "Geography", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "string", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1520, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": "$.relational_database.rows[0].Gender", "MATCH_BY": null, "VAR_NAME": "Gender", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "string", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1521, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": "$.relational_database.rows[0].Age", "MATCH_BY": null, "VAR_NAME": "Age", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "integer", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1522, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": "$.relational_database.rows[0].Tenure", "MATCH_BY": null, "VAR_NAME": "Tenure", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "integer", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1523, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": "$.relational_database.rows[0].Exited", "MATCH_BY": null, "VAR_NAME": "Exited", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "inferred", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1524, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": "$.relational_database.rows[0].salesforceKey", "MATCH_BY": null, "VAR_NAME": "salesforceKey", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "string", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1532, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": ".rows[0]", "MATCH_BY": null, "VAR_NAME": "first_record", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "object", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1533, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": ".rows[0].Surname", "MATCH_BY": null, "VAR_NAME": "Surname", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "string", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1534, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": ".rows", "MATCH_BY": null, "VAR_NAME": "record_set", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "array", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1535, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": ".rows[0].CustomerId", "MATCH_BY": null, "VAR_NAME": "CustomerId", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "string", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1536, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": ".rows[0].NumOfProducts", "MATCH_BY": null, "VAR_NAME": "NumOfProducts", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "integer", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1537, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": ".rows[0].Balance", "MATCH_BY": null, "VAR_NAME": "Balance", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "inferred", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1538, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": ".rows[0].HasCrCard", "MATCH_BY": null, "VAR_NAME": "HasCrCard", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "integer", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1539, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": ".rows[0].IsActiveMember", "MATCH_BY": null, "VAR_NAME": "IsActiveMember", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "integer", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}], "UI_OBJECT_IDENTIFIER": "878"}, {"OP_SEQ_ID": 34594, "BLUEPRINT_ID": 148, "OPERATION_ID": 880, "SEQUENCE": 2, "ROUTE": 1, "OPERATION_IS_REGULAR": "true", "GADGET_ID": 12, "OPERATION_NAME": "Customer Churn Gradient Boost", "OPERATION_DESC": "Customer Churn Gradient Boost", "OPERATION_CAT_DC": null, "OPERATION_RETURN_KEY": "customer_churn_gb", "OPERATION_ASYNC": "false", "OPERATION_CACHE": "false", "OPERATION_CACHE_TO_TYPE": null, "OPERATION_CACHE_TO_VALUE": "60", "CACHE_DEFAULT": "false", "DISABLE_REQUEST_LOGGING": "False", "DISABLE_RESPONSE_LOGGING": "False", "RUN_ON_BLUEPRINT_FAILURE": null, "RUN_ON_BLUEPRINT_SUCCESS": null, "RUN_ON_BLUEPRINT_CACHED_RESPONSE": false, "OPERATION_UUID": "3ffd59e4-d7f3-4338-b108-4ec3845faaf0", "GADGET": {"GADGET_ID": 12, "COMM_CLASS_ID": 10011, "GADGET_NAME": "QP Model Operator", "GADGET_DESC": "Executes Quickpath Models.", "GADGET_STATUS": "ACTIVE", "GADGET_CATEGORY_ID": 18, "GADGET_ICON_ID": 9, "IS_PLACEHOLDER": "false", "GADGET_UUID": "7613bf5f-a9db-42ff-8520-2554ab7ee552", "GADGET_CATEGORY": "Operator", "COMM_CLASS": "QPModelOperatorComm"}, "COMM_CLASS_NAME": "QPModelOperatorComm", "OPERATION_PARAMS": [{"OPERATION_PARAM_ID": 1961, "OPERATION_ID": 880, "PARAM_NM": "template", "PARAM_TYPE": "json", "PARAM_VALUE": "{\"commands\":[\"execute_model\"],\"method\":\"predict_proba\",\"method_arguments\":{\"age\":\"$Age\",\"balance\":\"$Balance\",\"credit_score\":\"$CreditScore\",\"estimated_salary\":\"$EstimatedSalary\",\"gender\":\"$Gender\",\"geography\":\"$Geography\",\"has_credit_card\":\"$HasCrCard\",\"is_active_member\":\"$IsActiveMember\",\"number_of_products\":\"$NumOfProducts\",\"tenure\":\"$Tenure\"},\"model_artifact_id\":17,\"model_config_version_id\":\"LATEST\"}"}, {"OPERATION_PARAM_ID": 1962, "OPERATION_ID": 880, "PARAM_NM": "LOGIC_IN", "PARAM_TYPE": "string", "PARAM_VALUE": ""}, {"OPERATION_PARAM_ID": 1963, "OPERATION_ID": 880, "PARAM_NM": "LOGIC_OUT", "PARAM_TYPE": "string", "PARAM_VALUE": ""}], "OPERATION_VAR_DEFS": [{"VAR_DEF_ID": 1530, "BLUEPRINT_ID": 148, "AVAILABILITY": 880, "ORIGIN": "operation_response", "PATH": "$.customer_churn_gb.output[0][0]", "MATCH_BY": null, "VAR_NAME": "probability_no_churn", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "float", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1531, "BLUEPRINT_ID": 148, "AVAILABILITY": 880, "ORIGIN": "operation_response", "PATH": "$.customer_churn_gb.output[0][1]", "MATCH_BY": null, "VAR_NAME": "probability_churn", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "float", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1540, "BLUEPRINT_ID": 148, "AVAILABILITY": 880, "ORIGIN": "user_defined", "PATH": null, "MATCH_BY": null, "VAR_NAME": "churnLikelihood", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "string", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}], "UI_OBJECT_IDENTIFIER": "880", "model_metadata": {"design": {"pod_name": "qp-modelpod-design-17", "service_name": "qp-modelservice-design-17", "model_id": 17, "model_framework_id": 2, "model_algorithm_id": 1, "model_name": "Gradient Boosting Bank Churn", "model_desc": "gradient_booster_bank_churn_pickle.sav", "deployment_type": null, "alias": null, "analytic_id": 15, "analytic_name": "Financial Customer Churn", "analytic_desc": "Financial Customer Churn - Predict if a customer is likely to churn", "model_deploy_id": 93, "model_definition_id": 17, "stage_id": null, "deployed_by": 16, "timestamp": "1611888549", "deployment_notes": null, "deployment_environment_id": 1, "version_created_under": null, "pod_replica_count_min": 1, "pod_replica_count_max": 2, "pod_cpu_threshold_percentage": 80, "pod_memory_min": 50, "pod_memory_max": 250, "pod_cpu_min": 50, "pod_cpu_max": 300, "pod_gunicorn_worker_count": 1, "pod_gunicorn_thread_count": 4, "model": null, "version_major": 1, "is_remote_flag": null, "is_active": null, "is_tested": null, "model_config_version_id": 70, "version_minor": 4, "model_config": {"code_documentation": {"methods": [{"arguments": [], "documentation": "Call decision_function on the estimator with the best found parameters.\n\n        Only available if ``refit=True`` and the underlying estimator supports\n        ``decision_function``.\n\n        Parameters\n        ----------\n        X : indexable, length n_samples\n            Must fulfill the input assumptions of the\n            underlying estimator.\n\n        ", "method_name": "decision_function"}, {"arguments": [], "documentation": "Run fit with all sets of parameters.\n\n        Parameters\n        ----------\n\n        X : array-like of shape (n_samples, n_features)\n            Training vector, where n_samples is the number of samples and\n            n_features is the number of features.\n\n        y : array-like of shape (n_samples, n_output)             or (n_samples,), default=None\n            Target relative to X for classification or regression;\n            None for unsupervised learning.\n\n        groups : array-like of shape (n_samples,), default=None\n            Group labels for the samples used while splitting the dataset into\n            train/test set. Only used in conjunction with a \"Group\" :term:`cv`\n            instance (e.g., :class:`~sklearn.model_selection.GroupKFold`).\n\n        **fit_params : dict of str -> object\n            Parameters passed to the ``fit`` method of the estimator\n        ", "method_name": "fit"}, {"arguments": ["deep"], "documentation": "\n        Get parameters for this estimator.\n\n        Parameters\n        ----------\n        deep : bool, default=True\n            If True, will return the parameters for this estimator and\n            contained subobjects that are estimators.\n\n        Returns\n        -------\n        params : mapping of string to any\n            Parameter names mapped to their values.\n        ", "method_name": "get_params"}, {"arguments": [], "documentation": "Call predict on the estimator with the best found parameters.\n\n        Only available if ``refit=True`` and the underlying estimator supports\n        ``predict``.\n\n        Parameters\n        ----------\n        X : indexable, length n_samples\n            Must fulfill the input assumptions of the\n            underlying estimator.\n\n        ", "method_name": "predict"}, {"arguments": [], "documentation": "Call predict_log_proba on the estimator with the best found parameters.\n\n        Only available if ``refit=True`` and the underlying estimator supports\n        ``predict_log_proba``.\n\n        Parameters\n        ----------\n        X : indexable, length n_samples\n            Must fulfill the input assumptions of the\n            underlying estimator.\n\n        ", "method_name": "predict_log_proba"}, {"arguments": [], "documentation": "Call predict_proba on the estimator with the best found parameters.\n\n        Only available if ``refit=True`` and the underlying estimator supports\n        ``predict_proba``.\n\n        Parameters\n        ----------\n        X : indexable, length n_samples\n            Must fulfill the input assumptions of the\n            underlying estimator.\n\n        ", "method_name": "predict_proba"}, {"arguments": ["X", "y"], "documentation": "Returns the score on the given data, if the estimator has been refit.\n\n        This uses the score defined by ``scoring`` where provided, and the\n        ``best_estimator_.score`` method otherwise.\n\n        Parameters\n        ----------\n        X : array-like of shape (n_samples, n_features)\n            Input data, where n_samples is the number of samples and\n            n_features is the number of features.\n\n        y : array-like of shape (n_samples, n_output)             or (n_samples,), default=None\n            Target relative to X for classification or regression;\n            None for unsupervised learning.\n\n        Returns\n        -------\n        score : float\n        ", "method_name": "score"}, {"arguments": ["estimator", "X", "y_true", "sample_weight"], "documentation": null, "method_name": "scorer_"}, {"arguments": [], "documentation": "\n        Set the parameters of this estimator.\n\n        The method works on simple estimators as well as on nested objects\n        (such as pipelines). The latter have parameters of the form\n        ``<component>__<parameter>`` so that it's possible to update each\n        component of a nested object.\n\n        Parameters\n        ----------\n        **params : dict\n            Estimator parameters.\n\n        Returns\n        -------\n        self : object\n            Estimator instance.\n        ", "method_name": "set_params"}], "module": "unknown"}, "features": [{"column_default": "619", "column_name": "credit_score", "column_range": "350 -- 850", "data_type": "integer", "feature_type": "Continuous", "transformation": "None"}, {"column_default": "France", "column_name": "geography", "column_range": "{\"France\": 0, \"Germany\": 1, \"Spain\": 2}", "data_type": "integer", "feature_type": "Categorical", "transformation": "Label Encode"}, {"column_default": "Male", "column_name": "gender", "column_range": "{\"Female\": 0, \"Male\": 1}", "data_type": "integer", "feature_type": "Categorical", "transformation": "Label Encode"}, {"column_default": "42", "column_name": "age", "column_range": "18 -- 92", "data_type": "integer", "feature_type": "Continuous", "transformation": "None"}, {"column_default": "2", "column_name": "tenure", "column_range": "0 -- 10", "data_type": "integer", "feature_type": "Continuous", "transformation": "None"}, {"column_default": "0.0", "column_name": "balance", "column_range": "0 -- 250898.09", "data_type": "float", "feature_type": "Continuous", "transformation": "None"}, {"column_default": "1", "column_name": "number_of_products", "column_range": "1 -- 4", "data_type": "integer", "feature_type": "Continuous", "transformation": "None"}, {"column_default": "1", "column_name": "has_credit_card", "column_range": "[0, 1]", "data_type": "integer", "feature_type": "Continuous", "transformation": "None"}, {"column_default": "1", "column_name": "is_active_member", "column_range": "[0, 1]", "data_type": "integer", "feature_type": "Continuous", "transformation": "None"}, {"column_default": "101348.88", "column_name": "estimated_salary", "column_range": "11.58 -- 199992.48", "data_type": "float", "feature_type": "Continuous", "transformation": "None"}], "metadata": {}, "metrics": [{"include": false, "metric": "F1", "threshold": ".6", "value": "0.85"}, {"include": false, "metric": "Accuracy", "value": "0.86", "threshold": ".6"}, {"include": false, "metric": "R2", "value": "0.344", "threshold": ".28"}], "notes": "", "outcome": {}, "params": [{"default_value": "5", "name": "cv"}, {"default_value": "nan", "name": "error_score"}, {"default_value": "1.0", "name": "estimator__C"}, {"default_value": "None", "name": "estimator__class_weight"}, {"default_value": "False", "name": "estimator__dual"}, {"default_value": "True", "name": "estimator__fit_intercept"}, {"default_value": "1", "name": "estimator__intercept_scaling"}, {"default_value": "None", "name": "estimator__l1_ratio"}, {"default_value": "100", "name": "estimator__max_iter"}, {"default_value": "auto", "name": "estimator__multi_class"}, {"default_value": "None", "name": "estimator__n_jobs"}, {"default_value": "l2", "name": "estimator__penalty"}, {"default_value": "None", "name": "estimator__random_state"}, {"default_value": "lbfgs", "name": "estimator__solver"}, {"default_value": "0.0001", "name": "estimator__tol"}, {"default_value": "0", "name": "estimator__verbose"}, {"default_value": "False", "name": "estimator__warm_start"}, {"default_value": "LogisticRegression()", "name": "estimator"}, {"default_value": "deprecated", "name": "iid"}, {"default_value": "None", "name": "n_jobs"}, {"default_value": "{'C': [0.01, 0.05, 0.1, 0.5, 1, 5], 'solver': ['liblinear', 'newton-cg', 'lbfgs', 'sag', 'saga']}", "name": "param_grid"}, {"default_value": "2*n_jobs", "name": "pre_dispatch"}, {"default_value": "True", "name": "refit"}, {"default_value": "False", "name": "return_train_score"}, {"default_value": "accuracy", "name": "scoring"}, {"default_value": "3", "name": "verbose"}], "reference": {}}, "model_framework": "sklearn", "model_framework_version": "1.0", "model_framework_desc": null, "model_algorithm_name": "Logistic Regression", "model_algorithm_type": "logistic regression", "model_algorithm_desc": "logistic regression", "code_documentation": {"methods": [{"arguments": [], "documentation": "Call decision_function on the estimator with the best found parameters.\n\n        Only available if ``refit=True`` and the underlying estimator supports\n        ``decision_function``.\n\n        Parameters\n        ----------\n        X : indexable, length n_samples\n            Must fulfill the input assumptions of the\n            underlying estimator.\n\n        ", "method_name": "decision_function"}, {"arguments": [], "documentation": "Run fit with all sets of parameters.\n\n        Parameters\n        ----------\n\n        X : array-like of shape (n_samples, n_features)\n            Training vector, where n_samples is the number of samples and\n            n_features is the number of features.\n\n        y : array-like of shape (n_samples, n_output)             or (n_samples,), default=None\n            Target relative to X for classification or regression;\n            None for unsupervised learning.\n\n        groups : array-like of shape (n_samples,), default=None\n            Group labels for the samples used while splitting the dataset into\n            train/test set. Only used in conjunction with a \"Group\" :term:`cv`\n            instance (e.g., :class:`~sklearn.model_selection.GroupKFold`).\n\n        **fit_params : dict of str -> object\n            Parameters passed to the ``fit`` method of the estimator\n        ", "method_name": "fit"}, {"arguments": ["deep"], "documentation": "\n        Get parameters for this estimator.\n\n        Parameters\n        ----------\n        deep : bool, default=True\n            If True, will return the parameters for this estimator and\n            contained subobjects that are estimators.\n\n        Returns\n        -------\n        params : mapping of string to any\n            Parameter names mapped to their values.\n        ", "method_name": "get_params"}, {"arguments": [], "documentation": "Call predict on the estimator with the best found parameters.\n\n        Only available if ``refit=True`` and the underlying estimator supports\n        ``predict``.\n\n        Parameters\n        ----------\n        X : indexable, length n_samples\n            Must fulfill the input assumptions of the\n            underlying estimator.\n\n        ", "method_name": "predict"}, {"arguments": [], "documentation": "Call predict_log_proba on the estimator with the best found parameters.\n\n        Only available if ``refit=True`` and the underlying estimator supports\n        ``predict_log_proba``.\n\n        Parameters\n        ----------\n        X : indexable, length n_samples\n            Must fulfill the input assumptions of the\n            underlying estimator.\n\n        ", "method_name": "predict_log_proba"}, {"arguments": [], "documentation": "Call predict_proba on the estimator with the best found parameters.\n\n        Only available if ``refit=True`` and the underlying estimator supports\n        ``predict_proba``.\n\n        Parameters\n        ----------\n        X : indexable, length n_samples\n            Must fulfill the input assumptions of the\n            underlying estimator.\n\n        ", "method_name": "predict_proba"}, {"arguments": ["X", "y"], "documentation": "Returns the score on the given data, if the estimator has been refit.\n\n        This uses the score defined by ``scoring`` where provided, and the\n        ``best_estimator_.score`` method otherwise.\n\n        Parameters\n        ----------\n        X : array-like of shape (n_samples, n_features)\n            Input data, where n_samples is the number of samples and\n            n_features is the number of features.\n\n        y : array-like of shape (n_samples, n_output)             or (n_samples,), default=None\n            Target relative to X for classification or regression;\n            None for unsupervised learning.\n\n        Returns\n        -------\n        score : float\n        ", "method_name": "score"}, {"arguments": ["estimator", "X", "y_true", "sample_weight"], "documentation": null, "method_name": "scorer_"}, {"arguments": [], "documentation": "\n        Set the parameters of this estimator.\n\n        The method works on simple estimators as well as on nested objects\n        (such as pipelines). The latter have parameters of the form\n        ``<component>__<parameter>`` so that it's possible to update each\n        component of a nested object.\n\n        Parameters\n        ----------\n        **params : dict\n            Estimator parameters.\n\n        Returns\n        -------\n        self : object\n            Estimator instance.\n        ", "method_name": "set_params"}], "module": "unknown"}, "features": [{"column_default": "619", "column_name": "credit_score", "column_range": "350 -- 850", "data_type": "integer", "feature_type": "Continuous", "transformation": "None"}, {"column_default": "France", "column_name": "geography", "column_range": "{\"France\": 0, \"Germany\": 1, \"Spain\": 2}", "data_type": "integer", "feature_type": "Categorical", "transformation": "Label Encode"}, {"column_default": "Male", "column_name": "gender", "column_range": "{\"Female\": 0, \"Male\": 1}", "data_type": "integer", "feature_type": "Categorical", "transformation": "Label Encode"}, {"column_default": "42", "column_name": "age", "column_range": "18 -- 92", "data_type": "integer", "feature_type": "Continuous", "transformation": "None"}, {"column_default": "2", "column_name": "tenure", "column_range": "0 -- 10", "data_type": "integer", "feature_type": "Continuous", "transformation": "None"}, {"column_default": "0.0", "column_name": "balance", "column_range": "0 -- 250898.09", "data_type": "float", "feature_type": "Continuous", "transformation": "None"}, {"column_default": "1", "column_name": "number_of_products", "column_range": "1 -- 4", "data_type": "integer", "feature_type": "Continuous", "transformation": "None"}, {"column_default": "1", "column_name": "has_credit_card", "column_range": "[0, 1]", "data_type": "integer", "feature_type": "Continuous", "transformation": "None"}, {"column_default": "1", "column_name": "is_active_member", "column_range": "[0, 1]", "data_type": "integer", "feature_type": "Continuous", "transformation": "None"}, {"column_default": "101348.88", "column_name": "estimated_salary", "column_range": "11.58 -- 199992.48", "data_type": "float", "feature_type": "Continuous", "transformation": "None"}], "metadata": {}, "metrics": [{"include": false, "metric": "F1", "threshold": ".6", "value": "0.85"}, {"include": false, "metric": "Accuracy", "value": "0.86", "threshold": ".6"}, {"include": false, "metric": "R2", "value": "0.344", "threshold": ".28"}], "notes": "", "outcome": {}, "params": [{"default_value": "5", "name": "cv"}, {"default_value": "nan", "name": "error_score"}, {"default_value": "1.0", "name": "estimator__C"}, {"default_value": "None", "name": "estimator__class_weight"}, {"default_value": "False", "name": "estimator__dual"}, {"default_value": "True", "name": "estimator__fit_intercept"}, {"default_value": "1", "name": "estimator__intercept_scaling"}, {"default_value": "None", "name": "estimator__l1_ratio"}, {"default_value": "100", "name": "estimator__max_iter"}, {"default_value": "auto", "name": "estimator__multi_class"}, {"default_value": "None", "name": "estimator__n_jobs"}, {"default_value": "l2", "name": "estimator__penalty"}, {"default_value": "None", "name": "estimator__random_state"}, {"default_value": "lbfgs", "name": "estimator__solver"}, {"default_value": "0.0001", "name": "estimator__tol"}, {"default_value": "0", "name": "estimator__verbose"}, {"default_value": "False", "name": "estimator__warm_start"}, {"default_value": "LogisticRegression()", "name": "estimator"}, {"default_value": "deprecated", "name": "iid"}, {"default_value": "None", "name": "n_jobs"}, {"default_value": "{'C': [0.01, 0.05, 0.1, 0.5, 1, 5], 'solver': ['liblinear', 'newton-cg', 'lbfgs', 'sag', 'saga']}", "name": "param_grid"}, {"default_value": "2*n_jobs", "name": "pre_dispatch"}, {"default_value": "True", "name": "refit"}, {"default_value": "False", "name": "return_train_score"}, {"default_value": "accuracy", "name": "scoring"}, {"default_value": "3", "name": "verbose"}], "reference": {}}, "Production": {}}}, {"OP_SEQ_ID": 34595, "BLUEPRINT_ID": 148, "OPERATION_ID": 881, "SEQUENCE": 3, "ROUTE": 1, "OPERATION_IS_REGULAR": "true", "GADGET_ID": 3, "OPERATION_NAME": "Calculate Likelihood to Churn", "OPERATION_DESC": "Calculate Likelihood to Churn", "OPERATION_CAT_DC": null, "OPERATION_RETURN_KEY": "calculate_likelihood to Churn", "OPERATION_ASYNC": "false", "OPERATION_CACHE": "false", "OPERATION_CACHE_TO_TYPE": null, "OPERATION_CACHE_TO_VALUE": "60", "CACHE_DEFAULT": "false", "DISABLE_REQUEST_LOGGING": "False", "DISABLE_RESPONSE_LOGGING": "False", "RUN_ON_BLUEPRINT_FAILURE": null, "RUN_ON_BLUEPRINT_SUCCESS": null, "RUN_ON_BLUEPRINT_CACHED_RESPONSE": false, "OPERATION_UUID": "38c8f93f-214a-4461-a108-9f2a27a0cfc7", "GADGET": {"GADGET_ID": 3, "COMM_CLASS_ID": 10001, "GADGET_NAME": "Logic Executor", "GADGET_DESC": "Execute Python Logic Operator", "GADGET_STATUS": "ACTIVE", "GADGET_CATEGORY_ID": 18, "GADGET_ICON_ID": 17, "IS_PLACEHOLDER": "false", "GADGET_UUID": "aa46cbb1-ac42-4c91-95c9-f116c52ebff8", "GADGET_CATEGORY": "Operator", "COMM_CLASS": "QPLogicOperatorComm"}, "COMM_CLASS_NAME": "QPLogicOperatorComm", "OPERATION_PARAMS": [{"OPERATION_PARAM_ID": 1964, "OPERATION_ID": 881, "PARAM_NM": "template", "PARAM_TYPE": "json", "PARAM_VALUE": "{\"code\":\"\\nlikelihood = ''\\nif variable_definitions[\\\"probability_churn\\\"] > .80:\\n    likelihood = 'High'\\nelif variable_definitions[\\\"probability_churn\\\"] > .50:\\n    likelihood = 'Low'\\nelse:\\n    likelihood = 'Low'\\n\\nvariable_definitions[\\\"churnLikelihood\\\"] = likelihood\\n    \\n\\n\",\"commands\":[\"execute_python\"]}"}], "OPERATION_VAR_DEFS": [], "UI_OBJECT_IDENTIFIER": "881"}]}], "BLUEPRINT_IO_PARAMS": [{"BLUEPRINT_IO_PARAM_ID": 267, "BLUEPRINT_ID": 148, "INBOUND_OUTBOUND": "OUT", "PARAM_NM": "res_obj_template", "PARAM_TYPE": "json", "PARAM_VALUE": "{\"customerId\": \"$customerId\", \"churnLikelihood\": \"$churnLikelihood\", \"probability_churn\": \"$probability_churn\"}"}], "VAR_DEFS": [{"VAR_DEF_ID": 1516, "BLUEPRINT_ID": 148, "AVAILABILITY": 0, "ORIGIN": "req_obj", "PATH": "$.customerId", "MATCH_BY": null, "VAR_NAME": "customerId", "DEFAULT_VAL": "15634602", "OPERATION_IS_REGULAR": null, "IS_REQUIRED": "false", "DATA_TYPE": null, "TRANSFORMATIONS": null, "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1517, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": "$.relational_database.rows[0].CreditScore", "MATCH_BY": null, "VAR_NAME": "CreditScore", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "integer", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1518, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": "$.relational_database.rows[0].EstimatedSalary", "MATCH_BY": null, "VAR_NAME": "EstimatedSalary", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "float", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1519, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": "$.relational_database.rows[0].Geography", "MATCH_BY": null, "VAR_NAME": "Geography", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "string", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1520, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": "$.relational_database.rows[0].Gender", "MATCH_BY": null, "VAR_NAME": "Gender", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "string", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1521, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": "$.relational_database.rows[0].Age", "MATCH_BY": null, "VAR_NAME": "Age", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "integer", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1522, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": "$.relational_database.rows[0].Tenure", "MATCH_BY": null, "VAR_NAME": "Tenure", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "integer", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1523, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": "$.relational_database.rows[0].Exited", "MATCH_BY": null, "VAR_NAME": "Exited", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "inferred", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1524, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": "$.relational_database.rows[0].salesforceKey", "MATCH_BY": null, "VAR_NAME": "salesforceKey", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "string", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1530, "BLUEPRINT_ID": 148, "AVAILABILITY": 880, "ORIGIN": "operation_response", "PATH": "$.customer_churn_gb.output[0][0]", "MATCH_BY": null, "VAR_NAME": "probability_no_churn", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "float", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1531, "BLUEPRINT_ID": 148, "AVAILABILITY": 880, "ORIGIN": "operation_response", "PATH": "$.customer_churn_gb.output[0][1]", "MATCH_BY": null, "VAR_NAME": "probability_churn", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "float", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1532, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": ".rows[0]", "MATCH_BY": null, "VAR_NAME": "first_record", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "object", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1533, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": ".rows[0].Surname", "MATCH_BY": null, "VAR_NAME": "Surname", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "string", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1534, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": ".rows", "MATCH_BY": null, "VAR_NAME": "record_set", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "array", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1535, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": ".rows[0].CustomerId", "MATCH_BY": null, "VAR_NAME": "CustomerId", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "string", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1536, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": ".rows[0].NumOfProducts", "MATCH_BY": null, "VAR_NAME": "NumOfProducts", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "integer", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1537, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": ".rows[0].Balance", "MATCH_BY": null, "VAR_NAME": "Balance", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "inferred", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1538, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": ".rows[0].HasCrCard", "MATCH_BY": null, "VAR_NAME": "HasCrCard", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "integer", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1539, "BLUEPRINT_ID": 148, "AVAILABILITY": 878, "ORIGIN": "operation_response", "PATH": ".rows[0].IsActiveMember", "MATCH_BY": null, "VAR_NAME": "IsActiveMember", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "integer", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}, {"VAR_DEF_ID": 1540, "BLUEPRINT_ID": 148, "AVAILABILITY": 880, "ORIGIN": "user_defined", "PATH": null, "MATCH_BY": null, "VAR_NAME": "churnLikelihood", "DEFAULT_VAL": null, "OPERATION_IS_REGULAR": "true", "IS_REQUIRED": "false", "DATA_TYPE": "string", "TRANSFORMATIONS": "[]", "TRANSFORMATIONS_LIST": []}], "DEPLOYMENT_VERSIONS": [], "DOCUMENTATION": null, "DEFAULT_REQUEST_OBJECT": {"DEF_OBJ_ID": 64, "BLUEPRINT_ID": 148, "DEFAULT_OBJ": "{\"customerId\": \"15634602\"}"}, "END_OF_LIFE_OPERATIONS": [{"OP_SEQ_ID": 34596, "BLUEPRINT_ID": 148, "OPERATION_ID": 882, "SEQUENCE": 1, "ROUTE": null, "OPERATION_IS_REGULAR": "false", "GADGET_ID": 26, "OPERATION_NAME": "Log Blueprint History to S3", "OPERATION_DESC": "Update interaction history", "OPERATION_CAT_DC": null, "OPERATION_RETURN_KEY": "s3_training_data_logging", "OPERATION_ASYNC": "false", "OPERATION_CACHE": "false", "OPERATION_CACHE_TO_TYPE": null, "OPERATION_CACHE_TO_VALUE": "60", "CACHE_DEFAULT": "true", "DISABLE_REQUEST_LOGGING": "False", "DISABLE_RESPONSE_LOGGING": "False", "RUN_ON_BLUEPRINT_FAILURE": "False", "RUN_ON_BLUEPRINT_SUCCESS": "True", "RUN_ON_BLUEPRINT_CACHED_RESPONSE": false, "OPERATION_UUID": "6ab0eb73-9a97-4b57-9120-f2c2733f6007", "GADGET": {"GADGET_ID": 26, "COMM_CLASS_ID": 36, "GADGET_NAME": "Amazon S3", "GADGET_DESC": "Amazon S3", "GADGET_STATUS": "ACTIVE", "GADGET_CATEGORY_ID": 1, "GADGET_ICON_ID": 4, "IS_PLACEHOLDER": "false", "GADGET_UUID": "7903bf84-0230-491d-8496-f4a6eda298e4", "GADGET_CATEGORY": "Uncategorized", "COMM_CLASS": "AmazonS3Comm"}, "COMM_CLASS_NAME": "AmazonS3Comm", "OPERATION_PARAMS": [{"OPERATION_PARAM_ID": 1965, "OPERATION_ID": 882, "PARAM_NM": "template", "PARAM_TYPE": "json", "PARAM_VALUE": "{\"Bucket\":\"quickpath-platform-demo-logs\",\"commands\":[\"submit_quickpath_logs\"]}"}, {"OPERATION_PARAM_ID": 1966, "OPERATION_ID": 882, "PARAM_NM": "LOGIC_IN", "PARAM_TYPE": "string", "PARAM_VALUE": ""}, {"OPERATION_PARAM_ID": 1967, "OPERATION_ID": 882, "PARAM_NM": "LOGIC_OUT", "PARAM_TYPE": "string", "PARAM_VALUE": ""}], "OPERATION_VAR_DEFS": [], "UI_OBJECT_IDENTIFIER": "882"}], "UNROUTED_OPERATIONS": []}]}